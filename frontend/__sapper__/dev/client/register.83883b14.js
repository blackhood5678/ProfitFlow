import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, l as space, A as create_component, e as element, t as text, m as head_selector, f as detach_dev, p as claim_space, B as claim_component, c as claim_element, a as children, b as claim_text, g as add_location, q as attr_dev, C as set_style, h as insert_hydration_dev, D as mount_component, j as append_hydration_dev, u as set_input_value, w as listen_dev, E as prevent_default, F as prop_dev, G as transition_in, H as transition_out, I as destroy_component, y as run_all, J as globals, z as set_data_dev } from './client.38617a5e.js';
import { a as axios } from './axios.10fb4daa.js';
import { T as Toast } from './Toast.0a10c4d3.js';

/* src\routes\register.svelte generated by Svelte v3.55.1 */

const { document: document_1 } = globals;
const file = "src\\routes\\register.svelte";

// (155:28) {:else}
function create_else_block(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Show");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Show");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(155:28) {:else}",
		ctx
	});

	return block;
}

// (153:28) {#if showPassword}
function create_if_block_3(ctx) {
	let i;

	const block = {
		c: function create() {
			i = element("i");
			this.h();
		},
		l: function claim(nodes) {
			i = claim_element(nodes, "I", { class: true });
			children(i).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(i, "class", "fas fa-times");
			add_location(i, file, 153, 32, 5688);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, i, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(i);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(153:28) {#if showPassword}",
		ctx
	});

	return block;
}

// (172:20) {#if password !== passwordCheck}
function create_if_block_2(ctx) {
	let div;
	let i;
	let t;

	const block = {
		c: function create() {
			div = element("div");
			i = element("i");
			t = text("\r\n                            Passwords do not match");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			i = claim_element(div_nodes, "I", { class: true });
			children(i).forEach(detach_dev);
			t = claim_text(div_nodes, "\r\n                            Passwords do not match");
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(i, "class", "fas fa-exclamation-circle");
			add_location(i, file, 173, 28, 6549);
			attr_dev(div, "class", "text-danger");
			add_location(div, file, 172, 24, 6494);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div, anchor);
			append_hydration_dev(div, i);
			append_hydration_dev(div, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(172:20) {#if password !== passwordCheck}",
		ctx
	});

	return block;
}

// (179:20) {#if password && password === passwordCheck}
function create_if_block_1(ctx) {
	let div;
	let i;
	let t;

	const block = {
		c: function create() {
			div = element("div");
			i = element("i");
			t = text("\r\n                            Passwords is correct");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			i = claim_element(div_nodes, "I", { class: true });
			children(i).forEach(detach_dev);
			t = claim_text(div_nodes, "\r\n                            Passwords is correct");
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(i, "class", "fas fa-check");
			add_location(i, file, 180, 28, 6851);
			attr_dev(div, "class", "text-success");
			add_location(div, file, 179, 24, 6795);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div, anchor);
			append_hydration_dev(div, i);
			append_hydration_dev(div, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(179:20) {#if password && password === passwordCheck}",
		ctx
	});

	return block;
}

// (186:20) {#if error}
function create_if_block(ctx) {
	let fieldset;
	let label;
	let t0;
	let div;
	let p;
	let t1;

	const block = {
		c: function create() {
			fieldset = element("fieldset");
			label = element("label");
			t0 = space();
			div = element("div");
			p = element("p");
			t1 = text(/*error*/ ctx[4]);
			this.h();
		},
		l: function claim(nodes) {
			fieldset = claim_element(nodes, "FIELDSET", { class: true });
			var fieldset_nodes = children(fieldset);
			label = claim_element(fieldset_nodes, "LABEL", { class: true });
			children(label).forEach(detach_dev);
			t0 = claim_space(fieldset_nodes);
			div = claim_element(fieldset_nodes, "DIV", {});
			var div_nodes = children(div);
			p = claim_element(div_nodes, "P", { class: true });
			var p_nodes = children(p);
			t1 = claim_text(p_nodes, /*error*/ ctx[4]);
			p_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			fieldset_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(label, "class", "form-label");
			add_location(label, file, 187, 24, 7100);
			attr_dev(p, "class", "error-messages");
			add_location(p, file, 190, 28, 7197);
			add_location(div, file, 189, 24, 7162);
			attr_dev(fieldset, "class", "form-group");
			add_location(fieldset, file, 186, 20, 7045);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, fieldset, anchor);
			append_hydration_dev(fieldset, label);
			append_hydration_dev(fieldset, t0);
			append_hydration_dev(fieldset, div);
			append_hydration_dev(div, p);
			append_hydration_dev(p, t1);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*error*/ 16) set_data_dev(t1, /*error*/ ctx[4]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(fieldset);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(186:20) {#if error}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let toast;
	let t1;
	let div9;
	let div8;
	let div2;
	let div0;
	let h10;
	let t2;
	let t3;
	let div1;
	let p;
	let t4;
	let t5;
	let div3;
	let t6;
	let div7;
	let div6;
	let div4;
	let h11;
	let t7;
	let t8;
	let form;
	let fieldset0;
	let label0;
	let t9;
	let t10;
	let input0;
	let t11;
	let fieldset1;
	let label1;
	let t12;
	let t13;
	let input1;
	let t14;
	let fieldset2;
	let label2;
	let t15;
	let t16;
	let input2;
	let t17;
	let fieldset3;
	let label3;
	let t18;
	let t19;
	let input3;
	let t20;
	let fieldset4;
	let label4;
	let t21;
	let t22;
	let input4;
	let t23;
	let fieldset5;
	let label5;
	let t24;
	let t25;
	let input5;
	let input5_class_value;
	let t26;
	let input6;
	let input6_class_value;
	let t27;
	let a;
	let t28;
	let fieldset6;
	let label6;
	let t29;
	let t30;
	let input7;
	let t31;
	let t32;
	let t33;
	let t34;
	let div5;
	let button;
	let t35;
	let button_disabled_value;
	let current;
	let mounted;
	let dispose;

	toast = new Toast({
			props: { toastBody: /*toastBody*/ ctx[3] },
			$$inline: true
		});

	function select_block_type(ctx, dirty) {
		if (/*showPassword*/ ctx[2]) return create_if_block_3;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block0 = current_block_type(ctx);
	let if_block1 = /*password*/ ctx[0] !== /*passwordCheck*/ ctx[1] && create_if_block_2(ctx);
	let if_block2 = /*password*/ ctx[0] && /*password*/ ctx[0] === /*passwordCheck*/ ctx[1] && create_if_block_1(ctx);
	let if_block3 = /*error*/ ctx[4] && create_if_block(ctx);

	const block = {
		c: function create() {
			t0 = space();
			create_component(toast.$$.fragment);
			t1 = space();
			div9 = element("div");
			div8 = element("div");
			div2 = element("div");
			div0 = element("div");
			h10 = element("h1");
			t2 = text("Welcome to ProfitFlow");
			t3 = space();
			div1 = element("div");
			p = element("p");
			t4 = text("Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet");
			t5 = space();
			div3 = element("div");
			t6 = space();
			div7 = element("div");
			div6 = element("div");
			div4 = element("div");
			h11 = element("h1");
			t7 = text("Register");
			t8 = space();
			form = element("form");
			fieldset0 = element("fieldset");
			label0 = element("label");
			t9 = text("First Name:");
			t10 = space();
			input0 = element("input");
			t11 = space();
			fieldset1 = element("fieldset");
			label1 = element("label");
			t12 = text("Last Name:");
			t13 = space();
			input1 = element("input");
			t14 = space();
			fieldset2 = element("fieldset");
			label2 = element("label");
			t15 = text("Address:");
			t16 = space();
			input2 = element("input");
			t17 = space();
			fieldset3 = element("fieldset");
			label3 = element("label");
			t18 = text("Phone Number:");
			t19 = space();
			input3 = element("input");
			t20 = space();
			fieldset4 = element("fieldset");
			label4 = element("label");
			t21 = text("Email:");
			t22 = space();
			input4 = element("input");
			t23 = space();
			fieldset5 = element("fieldset");
			label5 = element("label");
			t24 = text("Password:");
			t25 = space();
			input5 = element("input");
			t26 = space();
			input6 = element("input");
			t27 = space();
			a = element("a");
			if_block0.c();
			t28 = space();
			fieldset6 = element("fieldset");
			label6 = element("label");
			t29 = text("Repeat Password:");
			t30 = space();
			input7 = element("input");
			t31 = space();
			if (if_block1) if_block1.c();
			t32 = space();
			if (if_block2) if_block2.c();
			t33 = space();
			if (if_block3) if_block3.c();
			t34 = space();
			div5 = element("div");
			button = element("button");
			t35 = text("Register");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = head_selector('svelte-oe4w7a', document_1.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(toast.$$.fragment, nodes);
			t1 = claim_space(nodes);
			div9 = claim_element(nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div2 = claim_element(div8_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h10 = claim_element(div0_nodes, "H1", {});
			var h10_nodes = children(h10);
			t2 = claim_text(h10_nodes, "Welcome to ProfitFlow");
			h10_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			p = claim_element(div1_nodes, "P", {});
			var p_nodes = children(p);
			t4 = claim_text(p_nodes, "Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet");
			p_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t5 = claim_space(div8_nodes);
			div3 = claim_element(div8_nodes, "DIV", { class: true });
			children(div3).forEach(detach_dev);
			t6 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div4 = claim_element(div6_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			h11 = claim_element(div4_nodes, "H1", { class: true });
			var h11_nodes = children(h11);
			t7 = claim_text(h11_nodes, "Register");
			h11_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t8 = claim_space(div6_nodes);
			form = claim_element(div6_nodes, "FORM", { method: true });
			var form_nodes = children(form);
			fieldset0 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset0_nodes = children(fieldset0);
			label0 = claim_element(fieldset0_nodes, "LABEL", { class: true });
			var label0_nodes = children(label0);
			t9 = claim_text(label0_nodes, "First Name:");
			label0_nodes.forEach(detach_dev);
			t10 = claim_space(fieldset0_nodes);

			input0 = claim_element(fieldset0_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset0_nodes.forEach(detach_dev);
			t11 = claim_space(form_nodes);
			fieldset1 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset1_nodes = children(fieldset1);
			label1 = claim_element(fieldset1_nodes, "LABEL", { class: true });
			var label1_nodes = children(label1);
			t12 = claim_text(label1_nodes, "Last Name:");
			label1_nodes.forEach(detach_dev);
			t13 = claim_space(fieldset1_nodes);

			input1 = claim_element(fieldset1_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset1_nodes.forEach(detach_dev);
			t14 = claim_space(form_nodes);
			fieldset2 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset2_nodes = children(fieldset2);
			label2 = claim_element(fieldset2_nodes, "LABEL", { class: true });
			var label2_nodes = children(label2);
			t15 = claim_text(label2_nodes, "Address:");
			label2_nodes.forEach(detach_dev);
			t16 = claim_space(fieldset2_nodes);

			input2 = claim_element(fieldset2_nodes, "INPUT", {
				type: true,
				name: true,
				id: true,
				placeholder: true,
				class: true
			});

			fieldset2_nodes.forEach(detach_dev);
			t17 = claim_space(form_nodes);
			fieldset3 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset3_nodes = children(fieldset3);
			label3 = claim_element(fieldset3_nodes, "LABEL", { class: true });
			var label3_nodes = children(label3);
			t18 = claim_text(label3_nodes, "Phone Number:");
			label3_nodes.forEach(detach_dev);
			t19 = claim_space(fieldset3_nodes);

			input3 = claim_element(fieldset3_nodes, "INPUT", {
				type: true,
				name: true,
				id: true,
				placeholder: true,
				class: true
			});

			fieldset3_nodes.forEach(detach_dev);
			t20 = claim_space(form_nodes);
			fieldset4 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset4_nodes = children(fieldset4);
			label4 = claim_element(fieldset4_nodes, "LABEL", { class: true });
			var label4_nodes = children(label4);
			t21 = claim_text(label4_nodes, "Email:");
			label4_nodes.forEach(detach_dev);
			t22 = claim_space(fieldset4_nodes);

			input4 = claim_element(fieldset4_nodes, "INPUT", {
				type: true,
				name: true,
				id: true,
				placeholder: true,
				class: true
			});

			fieldset4_nodes.forEach(detach_dev);
			t23 = claim_space(form_nodes);
			fieldset5 = claim_element(form_nodes, "FIELDSET", { class: true, style: true });
			var fieldset5_nodes = children(fieldset5);
			label5 = claim_element(fieldset5_nodes, "LABEL", { class: true });
			var label5_nodes = children(label5);
			t24 = claim_text(label5_nodes, "Password:");
			label5_nodes.forEach(detach_dev);
			t25 = claim_space(fieldset5_nodes);

			input5 = claim_element(fieldset5_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true,
				id: true
			});

			t26 = claim_space(fieldset5_nodes);

			input6 = claim_element(fieldset5_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			t27 = claim_space(fieldset5_nodes);
			a = claim_element(fieldset5_nodes, "A", { type: true, class: true });
			var a_nodes = children(a);
			if_block0.l(a_nodes);
			a_nodes.forEach(detach_dev);
			fieldset5_nodes.forEach(detach_dev);
			t28 = claim_space(form_nodes);
			fieldset6 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset6_nodes = children(fieldset6);
			label6 = claim_element(fieldset6_nodes, "LABEL", { class: true });
			var label6_nodes = children(label6);
			t29 = claim_text(label6_nodes, "Repeat Password:");
			label6_nodes.forEach(detach_dev);
			t30 = claim_space(fieldset6_nodes);

			input7 = claim_element(fieldset6_nodes, "INPUT", {
				class: true,
				type: true,
				placeholder: true,
				id: true
			});

			fieldset6_nodes.forEach(detach_dev);
			t31 = claim_space(form_nodes);
			if (if_block1) if_block1.l(form_nodes);
			t32 = claim_space(form_nodes);
			if (if_block2) if_block2.l(form_nodes);
			t33 = claim_space(form_nodes);
			if (if_block3) if_block3.l(form_nodes);
			t34 = claim_space(form_nodes);
			div5 = claim_element(form_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			button = claim_element(div5_nodes, "BUTTON", { class: true, type: true });
			var button_nodes = children(button);
			t35 = claim_text(button_nodes, "Register");
			button_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document_1.title = "Register • ProfitFlow";
			add_location(h10, file, 69, 16, 1829);
			attr_dev(div0, "class", "svelte-wgb6sq");
			add_location(div0, file, 68, 12, 1806);
			add_location(p, file, 72, 16, 1916);
			attr_dev(div1, "class", "svelte-wgb6sq");
			add_location(div1, file, 71, 12, 1893);
			attr_dev(div2, "class", "col-7 svelte-wgb6sq");
			add_location(div2, file, 67, 8, 1773);
			attr_dev(div3, "class", "spliter svelte-wgb6sq");
			add_location(div3, file, 84, 8, 2331);
			attr_dev(h11, "class", "text-xs-center");
			add_location(h11, file, 89, 20, 2466);
			attr_dev(div4, "class", " svelte-wgb6sq");
			add_location(div4, file, 88, 16, 2430);
			attr_dev(label0, "class", "form-label");
			add_location(label0, file, 94, 24, 2696);
			attr_dev(input0, "class", "form-control ");
			attr_dev(input0, "name", "first_name");
			attr_dev(input0, "type", "text");
			input0.required = true;
			attr_dev(input0, "placeholder", "Enter first name");
			add_location(input0, file, 97, 24, 2823);
			attr_dev(fieldset0, "class", "form-group mb-3");
			add_location(fieldset0, file, 93, 20, 2636);
			attr_dev(label1, "class", "form-label");
			add_location(label1, file, 106, 24, 3229);
			attr_dev(input1, "class", "form-control ");
			attr_dev(input1, "name", "last_name");
			attr_dev(input1, "type", "text");
			input1.required = true;
			attr_dev(input1, "placeholder", "Enter last name");
			add_location(input1, file, 109, 24, 3355);
			attr_dev(fieldset1, "class", "form-group mb-3");
			add_location(fieldset1, file, 105, 20, 3169);
			attr_dev(label2, "class", "form-label");
			add_location(label2, file, 119, 24, 3750);
			attr_dev(input2, "type", "text");
			attr_dev(input2, "name", "address");
			attr_dev(input2, "id", "address");
			input2.required = true;
			attr_dev(input2, "placeholder", "Enter your address");
			attr_dev(input2, "class", "form-control ");
			add_location(input2, file, 120, 24, 3818);
			attr_dev(fieldset2, "class", "mb-3");
			add_location(fieldset2, file, 118, 20, 3701);
			attr_dev(label3, "class", "form-label");
			add_location(label3, file, 124, 24, 4035);
			attr_dev(input3, "type", "text");
			attr_dev(input3, "name", "phone");
			attr_dev(input3, "id", "phone");
			input3.required = true;
			attr_dev(input3, "placeholder", "Enter phone number");
			attr_dev(input3, "class", "form-control ");
			add_location(input3, file, 125, 24, 4108);
			attr_dev(fieldset3, "class", "mb-3");
			add_location(fieldset3, file, 123, 20, 3986);
			attr_dev(label4, "class", "form-label");
			add_location(label4, file, 129, 24, 4321);
			attr_dev(input4, "type", "email");
			attr_dev(input4, "name", "email");
			attr_dev(input4, "id", "email");
			input4.required = true;
			attr_dev(input4, "placeholder", "Enter your email");
			attr_dev(input4, "class", "form-control ");
			add_location(input4, file, 130, 24, 4387);
			attr_dev(fieldset4, "class", "mb-3");
			add_location(fieldset4, file, 128, 20, 4272);
			attr_dev(label5, "class", "form-label");
			add_location(label5, file, 134, 24, 4638);
			attr_dev(input5, "class", input5_class_value = /*showPassword*/ ctx[2] ? "d-none" : "form-control");
			attr_dev(input5, "name", "password");
			attr_dev(input5, "type", "password");
			input5.required = true;
			attr_dev(input5, "placeholder", "Enter password");
			attr_dev(input5, "id", "password");
			add_location(input5, file, 135, 24, 4708);
			attr_dev(input6, "class", input6_class_value = /*showPassword*/ ctx[2] ? "form-control" : "d-none");
			attr_dev(input6, "name", "password");
			attr_dev(input6, "type", "text");
			input6.required = true;
			attr_dev(input6, "placeholder", "Enter password");
			add_location(input6, file, 143, 24, 5121);
			attr_dev(a, "type", "button");
			attr_dev(a, "class", "btn btn-default show-password svelte-wgb6sq");
			add_location(a, file, 151, 24, 5516);
			attr_dev(fieldset5, "class", "form-group mb-3");
			set_style(fieldset5, "position", "relative");
			add_location(fieldset5, file, 133, 20, 4550);
			attr_dev(label6, "class", "form-label");
			add_location(label6, file, 161, 24, 5973);
			attr_dev(input7, "class", "form-control ");
			attr_dev(input7, "type", "password");
			input7.required = true;
			attr_dev(input7, "placeholder", "Enter password again");
			attr_dev(input7, "id", "password_repeat");
			add_location(input7, file, 162, 24, 6050);
			attr_dev(fieldset6, "class", "form-group mb-3");
			add_location(fieldset6, file, 160, 20, 5913);
			attr_dev(button, "class", "btn btn-lg btn-primary pull-xs-right svelte-wgb6sq");
			attr_dev(button, "type", "submit");
			button.disabled = button_disabled_value = !/*password*/ ctx[0] || /*password*/ ctx[0] !== /*passwordCheck*/ ctx[1];
			add_location(button, file, 197, 24, 7401);
			attr_dev(div5, "class", "btn-group svelte-wgb6sq");
			add_location(div5, file, 196, 20, 7352);
			attr_dev(form, "method", "post");
			add_location(form, file, 92, 16, 2550);
			attr_dev(div6, "class", " svelte-wgb6sq");
			add_location(div6, file, 87, 12, 2398);
			attr_dev(div7, "class", " svelte-wgb6sq");
			add_location(div7, file, 86, 8, 2370);
			attr_dev(div8, "class", "row svelte-wgb6sq");
			add_location(div8, file, 66, 4, 1746);
			attr_dev(div9, "class", "auth-page container-fluid svelte-wgb6sq");
			add_location(div9, file, 65, 0, 1701);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			mount_component(toast, target, anchor);
			insert_hydration_dev(target, t1, anchor);
			insert_hydration_dev(target, div9, anchor);
			append_hydration_dev(div9, div8);
			append_hydration_dev(div8, div2);
			append_hydration_dev(div2, div0);
			append_hydration_dev(div0, h10);
			append_hydration_dev(h10, t2);
			append_hydration_dev(div2, t3);
			append_hydration_dev(div2, div1);
			append_hydration_dev(div1, p);
			append_hydration_dev(p, t4);
			append_hydration_dev(div8, t5);
			append_hydration_dev(div8, div3);
			append_hydration_dev(div8, t6);
			append_hydration_dev(div8, div7);
			append_hydration_dev(div7, div6);
			append_hydration_dev(div6, div4);
			append_hydration_dev(div4, h11);
			append_hydration_dev(h11, t7);
			append_hydration_dev(div6, t8);
			append_hydration_dev(div6, form);
			append_hydration_dev(form, fieldset0);
			append_hydration_dev(fieldset0, label0);
			append_hydration_dev(label0, t9);
			append_hydration_dev(fieldset0, t10);
			append_hydration_dev(fieldset0, input0);
			append_hydration_dev(form, t11);
			append_hydration_dev(form, fieldset1);
			append_hydration_dev(fieldset1, label1);
			append_hydration_dev(label1, t12);
			append_hydration_dev(fieldset1, t13);
			append_hydration_dev(fieldset1, input1);
			append_hydration_dev(form, t14);
			append_hydration_dev(form, fieldset2);
			append_hydration_dev(fieldset2, label2);
			append_hydration_dev(label2, t15);
			append_hydration_dev(fieldset2, t16);
			append_hydration_dev(fieldset2, input2);
			append_hydration_dev(form, t17);
			append_hydration_dev(form, fieldset3);
			append_hydration_dev(fieldset3, label3);
			append_hydration_dev(label3, t18);
			append_hydration_dev(fieldset3, t19);
			append_hydration_dev(fieldset3, input3);
			append_hydration_dev(form, t20);
			append_hydration_dev(form, fieldset4);
			append_hydration_dev(fieldset4, label4);
			append_hydration_dev(label4, t21);
			append_hydration_dev(fieldset4, t22);
			append_hydration_dev(fieldset4, input4);
			append_hydration_dev(form, t23);
			append_hydration_dev(form, fieldset5);
			append_hydration_dev(fieldset5, label5);
			append_hydration_dev(label5, t24);
			append_hydration_dev(fieldset5, t25);
			append_hydration_dev(fieldset5, input5);
			set_input_value(input5, /*password*/ ctx[0]);
			append_hydration_dev(fieldset5, t26);
			append_hydration_dev(fieldset5, input6);
			set_input_value(input6, /*password*/ ctx[0]);
			append_hydration_dev(fieldset5, t27);
			append_hydration_dev(fieldset5, a);
			if_block0.m(a, null);
			append_hydration_dev(form, t28);
			append_hydration_dev(form, fieldset6);
			append_hydration_dev(fieldset6, label6);
			append_hydration_dev(label6, t29);
			append_hydration_dev(fieldset6, t30);
			append_hydration_dev(fieldset6, input7);
			set_input_value(input7, /*passwordCheck*/ ctx[1]);
			append_hydration_dev(form, t31);
			if (if_block1) if_block1.m(form, null);
			append_hydration_dev(form, t32);
			if (if_block2) if_block2.m(form, null);
			append_hydration_dev(form, t33);
			if (if_block3) if_block3.m(form, null);
			append_hydration_dev(form, t34);
			append_hydration_dev(form, div5);
			append_hydration_dev(div5, button);
			append_hydration_dev(button, t35);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(input5, "input", /*input5_input_handler*/ ctx[7]),
					listen_dev(input6, "input", /*input6_input_handler*/ ctx[8]),
					listen_dev(a, "click", /*changePasswordInputType*/ ctx[6], false, false, false),
					listen_dev(input7, "input", /*input7_input_handler*/ ctx[9]),
					listen_dev(form, "submit", prevent_default(/*handleRegister*/ ctx[5]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			const toast_changes = {};
			if (dirty & /*toastBody*/ 8) toast_changes.toastBody = /*toastBody*/ ctx[3];
			toast.$set(toast_changes);

			if (!current || dirty & /*showPassword*/ 4 && input5_class_value !== (input5_class_value = /*showPassword*/ ctx[2] ? "d-none" : "form-control")) {
				attr_dev(input5, "class", input5_class_value);
			}

			if (dirty & /*password*/ 1 && input5.value !== /*password*/ ctx[0]) {
				set_input_value(input5, /*password*/ ctx[0]);
			}

			if (!current || dirty & /*showPassword*/ 4 && input6_class_value !== (input6_class_value = /*showPassword*/ ctx[2] ? "form-control" : "d-none")) {
				attr_dev(input6, "class", input6_class_value);
			}

			if (dirty & /*password*/ 1 && input6.value !== /*password*/ ctx[0]) {
				set_input_value(input6, /*password*/ ctx[0]);
			}

			if (current_block_type !== (current_block_type = select_block_type(ctx))) {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(a, null);
				}
			}

			if (dirty & /*passwordCheck*/ 2 && input7.value !== /*passwordCheck*/ ctx[1]) {
				set_input_value(input7, /*passwordCheck*/ ctx[1]);
			}

			if (/*password*/ ctx[0] !== /*passwordCheck*/ ctx[1]) {
				if (if_block1) ; else {
					if_block1 = create_if_block_2(ctx);
					if_block1.c();
					if_block1.m(form, t32);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*password*/ ctx[0] && /*password*/ ctx[0] === /*passwordCheck*/ ctx[1]) {
				if (if_block2) ; else {
					if_block2 = create_if_block_1(ctx);
					if_block2.c();
					if_block2.m(form, t33);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}

			if (/*error*/ ctx[4]) {
				if (if_block3) {
					if_block3.p(ctx, dirty);
				} else {
					if_block3 = create_if_block(ctx);
					if_block3.c();
					if_block3.m(form, t34);
				}
			} else if (if_block3) {
				if_block3.d(1);
				if_block3 = null;
			}

			if (!current || dirty & /*password, passwordCheck*/ 3 && button_disabled_value !== (button_disabled_value = !/*password*/ ctx[0] || /*password*/ ctx[0] !== /*passwordCheck*/ ctx[1])) {
				prop_dev(button, "disabled", button_disabled_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(toast.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(toast.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(toast, detaching);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div9);
			if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			if (if_block3) if_block3.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Register', slots, []);
	let password = "";
	let passwordCheck = "";
	let showPassword = false;
	let toastBody = '';
	let error;

	async function handleRegister(event) {
		const formData = new FormData(event.target);

		const response = await fetch("/register", {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
				Accept: "application/json"
			},
			body: JSON.stringify({
				first_name: formData.get("first_name"),
				last_name: formData.get("last_name"),
				email: formData.get("email"),
				phone: formData.get("phone"),
				password,
				address: formData.get("address")
			})
		});

		const parsed = await response.json();

		if (parsed.error) {
			$$invalidate(4, error = parsed.error);
		} else {
			showToast('Register is successful');

			setTimeout(
				function () {
					location.href = '/login';
				},
				3000
			);
		}
	}

	function changePasswordInputType() {
		$$invalidate(2, showPassword = !showPassword);
	}

	function showToast(text) {
		const toastLiveExample = document.getElementById('liveToast');

		const toast = new bootstrap.Toast(toastLiveExample,
		{
				// delay: 3000,
				animation: true,
				autohide: false
			});

		$$invalidate(3, toastBody = text);
		toast.show();
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Register> was created with unknown prop '${key}'`);
	});

	function input5_input_handler() {
		password = this.value;
		$$invalidate(0, password);
	}

	function input6_input_handler() {
		password = this.value;
		$$invalidate(0, password);
	}

	function input7_input_handler() {
		passwordCheck = this.value;
		$$invalidate(1, passwordCheck);
	}

	$$self.$capture_state = () => ({
		axios,
		Toast,
		password,
		passwordCheck,
		showPassword,
		toastBody,
		error,
		handleRegister,
		changePasswordInputType,
		showToast
	});

	$$self.$inject_state = $$props => {
		if ('password' in $$props) $$invalidate(0, password = $$props.password);
		if ('passwordCheck' in $$props) $$invalidate(1, passwordCheck = $$props.passwordCheck);
		if ('showPassword' in $$props) $$invalidate(2, showPassword = $$props.showPassword);
		if ('toastBody' in $$props) $$invalidate(3, toastBody = $$props.toastBody);
		if ('error' in $$props) $$invalidate(4, error = $$props.error);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		password,
		passwordCheck,
		showPassword,
		toastBody,
		error,
		handleRegister,
		changePasswordInputType,
		input5_input_handler,
		input6_input_handler,
		input7_input_handler
	];
}

class Register extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Register",
			options,
			id: create_fragment.name
		});
	}
}

export { Register as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
