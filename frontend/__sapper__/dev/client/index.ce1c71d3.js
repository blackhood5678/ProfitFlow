import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, J as globals, k as validate_each_argument, l as space, e as element, t as text, m as head_selector, f as detach_dev, p as claim_space, c as claim_element, a as children, b as claim_text, q as attr_dev, g as add_location, C as set_style, h as insert_hydration_dev, j as append_hydration_dev, u as set_input_value, w as listen_dev, E as prevent_default, n as noop, y as run_all, K as empty, x as destroy_each, z as set_data_dev } from './client.38617a5e.js';
import { a as axios } from './axios.10fb4daa.js';

/* src\routes\settings\index.svelte generated by Svelte v3.55.1 */

const { console: console_1 } = globals;
const file = "src\\routes\\settings\\index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[13] = list[i];
	return child_ctx;
}

// (123:7) {:else }
function create_else_block(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Password is incorrect!");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Password is incorrect!");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "text-danger");
			add_location(p, file, 123, 8, 3105);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, p, anchor);
			append_hydration_dev(p, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(123:7) {:else }",
		ctx
	});

	return block;
}

// (121:7) {#if !password || password === password_check}
function create_if_block_1(ctx) {
	const block = { c: noop, l: noop, m: noop, d: noop };

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(121:7) {#if !password || password === password_check}",
		ctx
	});

	return block;
}

// (127:7) {#if errors.length > 0}
function create_if_block(ctx) {
	let each_1_anchor;
	let each_value = /*errors*/ ctx[5];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
		},
		l: function claim(nodes) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = empty();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_hydration_dev(target, each_1_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*errors*/ 32) {
				each_value = /*errors*/ ctx[5];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		d: function destroy(detaching) {
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(each_1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(127:7) {#if errors.length > 0}",
		ctx
	});

	return block;
}

// (128:8) {#each errors as item}
function create_each_block(ctx) {
	let div0;
	let i;
	let t0;
	let div1;
	let t1_value = /*item*/ ctx[13].msg + "";
	let t1;

	const block = {
		c: function create() {
			div0 = element("div");
			i = element("i");
			t0 = space();
			div1 = element("div");
			t1 = text(t1_value);
			this.h();
		},
		l: function claim(nodes) {
			div0 = claim_element(nodes, "DIV", {});
			var div0_nodes = children(div0);
			i = claim_element(div0_nodes, "I", { class: true });
			children(i).forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", {});
			var div1_nodes = children(div1);
			t1 = claim_text(div1_nodes, t1_value);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(i, "class", "fas fa-circle");
			add_location(i, file, 128, 14, 3250);
			add_location(div0, file, 128, 9, 3245);
			add_location(div1, file, 129, 9, 3296);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div0, anchor);
			append_hydration_dev(div0, i);
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, div1, anchor);
			append_hydration_dev(div1, t1);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*errors*/ 32 && t1_value !== (t1_value = /*item*/ ctx[13].msg + "")) set_data_dev(t1, t1_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(128:8) {#each errors as item}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let div5;
	let div4;
	let div3;
	let div2;
	let h1;
	let t1;
	let t2;
	let form;
	let fieldset0;
	let label0;
	let t3;
	let t4;
	let input0;
	let t5;
	let fieldset1;
	let label1;
	let t6;
	let t7;
	let input1;
	let t8;
	let fieldset2;
	let label2;
	let t9;
	let t10;
	let input2;
	let t11;
	let fieldset3;
	let label3;
	let t12;
	let t13;
	let input3;
	let t14;
	let input4;
	let t15;
	let div1;
	let label4;
	let t16;
	let div0;
	let t17;
	let t18;
	let button;
	let t19;
	let mounted;
	let dispose;

	function select_block_type(ctx, dirty) {
		if (!/*password*/ ctx[0] || /*password*/ ctx[0] === /*password_check*/ ctx[1]) return create_if_block_1;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block0 = current_block_type(ctx);
	let if_block1 = /*errors*/ ctx[5].length > 0 && create_if_block(ctx);

	const block = {
		c: function create() {
			t0 = space();
			div5 = element("div");
			div4 = element("div");
			div3 = element("div");
			div2 = element("div");
			h1 = element("h1");
			t1 = text("Your Settings:");
			t2 = space();
			form = element("form");
			fieldset0 = element("fieldset");
			label0 = element("label");
			t3 = text("First Name:");
			t4 = space();
			input0 = element("input");
			t5 = space();
			fieldset1 = element("fieldset");
			label1 = element("label");
			t6 = text("Last Name:");
			t7 = space();
			input1 = element("input");
			t8 = space();
			fieldset2 = element("fieldset");
			label2 = element("label");
			t9 = text("Email:");
			t10 = space();
			input2 = element("input");
			t11 = space();
			fieldset3 = element("fieldset");
			label3 = element("label");
			t12 = text("Password:");
			t13 = space();
			input3 = element("input");
			t14 = space();
			input4 = element("input");
			t15 = space();
			div1 = element("div");
			label4 = element("label");
			t16 = space();
			div0 = element("div");
			if_block0.c();
			t17 = space();
			if (if_block1) if_block1.c();
			t18 = space();
			button = element("button");
			t19 = text("Save Settings");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = head_selector('svelte-8c6p0', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div5 = claim_element(nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h1 = claim_element(div2_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Your Settings:");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);
			form = claim_element(div2_nodes, "FORM", { method: true });
			var form_nodes = children(form);
			fieldset0 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset0_nodes = children(fieldset0);
			label0 = claim_element(fieldset0_nodes, "LABEL", { class: true });
			var label0_nodes = children(label0);
			t3 = claim_text(label0_nodes, "First Name:");
			label0_nodes.forEach(detach_dev);
			t4 = claim_space(fieldset0_nodes);

			input0 = claim_element(fieldset0_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset0_nodes.forEach(detach_dev);
			t5 = claim_space(form_nodes);
			fieldset1 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset1_nodes = children(fieldset1);
			label1 = claim_element(fieldset1_nodes, "LABEL", { class: true });
			var label1_nodes = children(label1);
			t6 = claim_text(label1_nodes, "Last Name:");
			label1_nodes.forEach(detach_dev);
			t7 = claim_space(fieldset1_nodes);

			input1 = claim_element(fieldset1_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset1_nodes.forEach(detach_dev);
			t8 = claim_space(form_nodes);
			fieldset2 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset2_nodes = children(fieldset2);
			label2 = claim_element(fieldset2_nodes, "LABEL", { class: true });
			var label2_nodes = children(label2);
			t9 = claim_text(label2_nodes, "Email:");
			label2_nodes.forEach(detach_dev);
			t10 = claim_space(fieldset2_nodes);

			input2 = claim_element(fieldset2_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset2_nodes.forEach(detach_dev);
			t11 = claim_space(form_nodes);
			fieldset3 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset3_nodes = children(fieldset3);
			label3 = claim_element(fieldset3_nodes, "LABEL", { class: true });
			var label3_nodes = children(label3);
			t12 = claim_text(label3_nodes, "Password:");
			label3_nodes.forEach(detach_dev);
			t13 = claim_space(fieldset3_nodes);

			input3 = claim_element(fieldset3_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true,
				style: true
			});

			t14 = claim_space(fieldset3_nodes);

			input4 = claim_element(fieldset3_nodes, "INPUT", {
				class: true,
				type: true,
				placeholder: true
			});

			fieldset3_nodes.forEach(detach_dev);
			t15 = claim_space(form_nodes);
			div1 = claim_element(form_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			label4 = claim_element(div1_nodes, "LABEL", { class: true });
			var label4_nodes = children(label4);
			label4_nodes.forEach(detach_dev);
			t16 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			if_block0.l(div0_nodes);
			t17 = claim_space(div0_nodes);
			if (if_block1) if_block1.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t18 = claim_space(form_nodes);
			button = claim_element(form_nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t19 = claim_text(button_nodes, "Save Settings");
			button_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Settings | ProfitFlow";
			attr_dev(h1, "class", "text-xs-center");
			add_location(h1, file, 64, 16, 1387);
			attr_dev(label0, "class", "form-label");
			add_location(label0, file, 69, 6, 1564);
			attr_dev(input0, "class", "form-control form-control-lg");
			attr_dev(input0, "name", "first_name");
			attr_dev(input0, "type", "text");
			attr_dev(input0, "placeholder", "Enter first name");
			input0.required = true;
			add_location(input0, file, 70, 6, 1617);
			attr_dev(fieldset0, "class", "form-group mb-3");
			add_location(fieldset0, file, 68, 5, 1522);
			attr_dev(label1, "class", "form-label");
			add_location(label1, file, 79, 6, 1870);
			attr_dev(input1, "class", "form-control form-control-lg");
			attr_dev(input1, "name", "last_name");
			attr_dev(input1, "type", "text");
			attr_dev(input1, "placeholder", "Enter last name");
			input1.required = true;
			add_location(input1, file, 80, 6, 1922);
			attr_dev(fieldset1, "class", "form-group mb-3");
			add_location(fieldset1, file, 78, 5, 1828);
			attr_dev(label2, "class", "form-label");
			add_location(label2, file, 90, 6, 2174);
			attr_dev(input2, "class", "form-control form-control-lg");
			attr_dev(input2, "name", "email");
			attr_dev(input2, "type", "email");
			attr_dev(input2, "placeholder", "Enter email");
			input2.required = true;
			add_location(input2, file, 91, 6, 2222);
			attr_dev(fieldset2, "class", "form-group mb-3");
			add_location(fieldset2, file, 89, 5, 2132);
			attr_dev(label3, "class", "form-label");
			add_location(label3, file, 101, 6, 2464);
			attr_dev(input3, "class", "form-control form-control-lg");
			attr_dev(input3, "name", "password");
			attr_dev(input3, "type", "password");
			attr_dev(input3, "placeholder", "New Password");
			set_style(input3, "margin-bottom", "10px");
			input3.required = true;
			add_location(input3, file, 102, 6, 2515);
			attr_dev(input4, "class", "form-control form-control-lg");
			attr_dev(input4, "type", "password");
			attr_dev(input4, "placeholder", "Confirm Password");
			input4.required = true;
			add_location(input4, file, 109, 6, 2735);
			attr_dev(fieldset3, "class", "form-group mb-3");
			add_location(fieldset3, file, 100, 5, 2422);
			attr_dev(label4, "class", "form-label");
			add_location(label4, file, 118, 6, 2957);
			attr_dev(div0, "class", "d-flex");
			add_location(div0, file, 119, 6, 3001);
			attr_dev(div1, "class", "mb-3");
			add_location(div1, file, 117, 5, 2931);
			attr_dev(button, "class", "btn btn-lg btn-primary pull-xs-right");
			add_location(button, file, 135, 5, 3384);
			attr_dev(form, "method", "POST");
			add_location(form, file, 66, 16, 1453);
			attr_dev(div2, "class", "col-md-6 offset-md-3 col-xs-12 py-4");
			add_location(div2, file, 63, 12, 1320);
			attr_dev(div3, "class", "row");
			add_location(div3, file, 62, 8, 1289);
			attr_dev(div4, "class", "container page");
			add_location(div4, file, 61, 4, 1251);
			attr_dev(div5, "class", "settings-page");
			add_location(div5, file, 60, 0, 1218);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, div5, anchor);
			append_hydration_dev(div5, div4);
			append_hydration_dev(div4, div3);
			append_hydration_dev(div3, div2);
			append_hydration_dev(div2, h1);
			append_hydration_dev(h1, t1);
			append_hydration_dev(div2, t2);
			append_hydration_dev(div2, form);
			append_hydration_dev(form, fieldset0);
			append_hydration_dev(fieldset0, label0);
			append_hydration_dev(label0, t3);
			append_hydration_dev(fieldset0, t4);
			append_hydration_dev(fieldset0, input0);
			set_input_value(input0, /*firstName*/ ctx[2]);
			append_hydration_dev(form, t5);
			append_hydration_dev(form, fieldset1);
			append_hydration_dev(fieldset1, label1);
			append_hydration_dev(label1, t6);
			append_hydration_dev(fieldset1, t7);
			append_hydration_dev(fieldset1, input1);
			set_input_value(input1, /*lastName*/ ctx[3]);
			append_hydration_dev(form, t8);
			append_hydration_dev(form, fieldset2);
			append_hydration_dev(fieldset2, label2);
			append_hydration_dev(label2, t9);
			append_hydration_dev(fieldset2, t10);
			append_hydration_dev(fieldset2, input2);
			set_input_value(input2, /*email*/ ctx[4]);
			append_hydration_dev(form, t11);
			append_hydration_dev(form, fieldset3);
			append_hydration_dev(fieldset3, label3);
			append_hydration_dev(label3, t12);
			append_hydration_dev(fieldset3, t13);
			append_hydration_dev(fieldset3, input3);
			set_input_value(input3, /*password*/ ctx[0]);
			append_hydration_dev(fieldset3, t14);
			append_hydration_dev(fieldset3, input4);
			set_input_value(input4, /*password_check*/ ctx[1]);
			append_hydration_dev(form, t15);
			append_hydration_dev(form, div1);
			append_hydration_dev(div1, label4);
			append_hydration_dev(div1, t16);
			append_hydration_dev(div1, div0);
			if_block0.m(div0, null);
			append_hydration_dev(div0, t17);
			if (if_block1) if_block1.m(div0, null);
			append_hydration_dev(form, t18);
			append_hydration_dev(form, button);
			append_hydration_dev(button, t19);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[8]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[9]),
					listen_dev(input2, "input", /*input2_input_handler*/ ctx[10]),
					listen_dev(input3, "input", /*input3_input_handler*/ ctx[11]),
					listen_dev(input4, "input", /*input4_input_handler*/ ctx[12]),
					listen_dev(form, "submit", prevent_default(/*handleSubmit*/ ctx[6]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*firstName*/ 4 && input0.value !== /*firstName*/ ctx[2]) {
				set_input_value(input0, /*firstName*/ ctx[2]);
			}

			if (dirty & /*lastName*/ 8 && input1.value !== /*lastName*/ ctx[3]) {
				set_input_value(input1, /*lastName*/ ctx[3]);
			}

			if (dirty & /*email*/ 16 && input2.value !== /*email*/ ctx[4]) {
				set_input_value(input2, /*email*/ ctx[4]);
			}

			if (dirty & /*password*/ 1 && input3.value !== /*password*/ ctx[0]) {
				set_input_value(input3, /*password*/ ctx[0]);
			}

			if (dirty & /*password_check*/ 2 && input4.value !== /*password_check*/ ctx[1]) {
				set_input_value(input4, /*password_check*/ ctx[1]);
			}

			if (current_block_type !== (current_block_type = select_block_type(ctx))) {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(div0, t17);
				}
			}

			if (/*errors*/ ctx[5].length > 0) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(div0, null);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div5);
			if_block0.d();
			if (if_block1) if_block1.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload(page, session) {
	return this.fetch(`profile.json`).then(r => r.json()).then(user => {
		return { user };
	});
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Settings', slots, []);
	let { user } = $$props;
	let password;
	let password_check;
	let firstName = !!user.first_name ? user.first_name : '';
	let lastName = !!user.last_name ? user.last_name : '';
	let email = !!user.email ? user.email : '';
	let errors = [];

	async function handleSubmit(event) {
		new FormData(event.target);

		try {
			await axios.post('/settings', {
				first_name: firstName,
				last_name: lastName,
				email,
				password
			}).then(response => {
				// handle success
				// console.log(response.data)
				location.href = '/profile';
			}).catch(error => {
				if (error.response.data.error) {
					$$invalidate(5, errors = [{ msg: error.response.data.error }]);
				} else {
					$$invalidate(5, errors = error.response.data.errors);
				}
			});
		} catch(error) {
			console.error(error);
		}
	}

	$$self.$$.on_mount.push(function () {
		if (user === undefined && !('user' in $$props || $$self.$$.bound[$$self.$$.props['user']])) {
			console_1.warn("<Settings> was created without expected prop 'user'");
		}
	});

	const writable_props = ['user'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<Settings> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		firstName = this.value;
		$$invalidate(2, firstName);
	}

	function input1_input_handler() {
		lastName = this.value;
		$$invalidate(3, lastName);
	}

	function input2_input_handler() {
		email = this.value;
		$$invalidate(4, email);
	}

	function input3_input_handler() {
		password = this.value;
		$$invalidate(0, password);
	}

	function input4_input_handler() {
		password_check = this.value;
		$$invalidate(1, password_check);
	}

	$$self.$$set = $$props => {
		if ('user' in $$props) $$invalidate(7, user = $$props.user);
	};

	$$self.$capture_state = () => ({
		preload,
		axios,
		user,
		password,
		password_check,
		firstName,
		lastName,
		email,
		errors,
		handleSubmit
	});

	$$self.$inject_state = $$props => {
		if ('user' in $$props) $$invalidate(7, user = $$props.user);
		if ('password' in $$props) $$invalidate(0, password = $$props.password);
		if ('password_check' in $$props) $$invalidate(1, password_check = $$props.password_check);
		if ('firstName' in $$props) $$invalidate(2, firstName = $$props.firstName);
		if ('lastName' in $$props) $$invalidate(3, lastName = $$props.lastName);
		if ('email' in $$props) $$invalidate(4, email = $$props.email);
		if ('errors' in $$props) $$invalidate(5, errors = $$props.errors);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		password,
		password_check,
		firstName,
		lastName,
		email,
		errors,
		handleSubmit,
		user,
		input0_input_handler,
		input1_input_handler,
		input2_input_handler,
		input3_input_handler,
		input4_input_handler
	];
}

class Settings extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { user: 7 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Settings",
			options,
			id: create_fragment.name
		});
	}

	get user() {
		throw new Error("<Settings>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set user(value) {
		throw new Error("<Settings>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { Settings as default, preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
