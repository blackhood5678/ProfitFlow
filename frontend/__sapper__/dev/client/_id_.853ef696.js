import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, k as validate_each_argument, e as element, l as space, t as text, c as claim_element, a as children, p as claim_space, b as claim_text, f as detach_dev, g as add_location, q as attr_dev, h as insert_hydration_dev, j as append_hydration_dev, u as set_input_value, w as listen_dev, E as prevent_default, n as noop, y as run_all, x as destroy_each, z as set_data_dev } from './client.38617a5e.js';

/* src\routes\admin\edit-user\[id].svelte generated by Svelte v3.55.1 */

const file = "src\\routes\\admin\\edit-user\\[id].svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[16] = list[i];
	return child_ctx;
}

// (79:4) {#if errors.length > 0}
function create_if_block(ctx) {
	let div;
	let each_value = /*errors*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { id: true, class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "id", "error-container");
			attr_dev(div, "class", "text-danger");
			add_location(div, file, 79, 8, 2181);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*errors*/ 1) {
				each_value = /*errors*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(79:4) {#if errors.length > 0}",
		ctx
	});

	return block;
}

// (81:12) {#each errors as item}
function create_each_block(ctx) {
	let div2;
	let div0;
	let i;
	let t0;
	let div1;
	let t1_value = /*item*/ ctx[16].msg + "";
	let t1;
	let t2;

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			i = element("i");
			t0 = space();
			div1 = element("div");
			t1 = text(t1_value);
			t2 = space();
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", {});
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", {});
			var div0_nodes = children(div0);
			i = claim_element(div0_nodes, "I", { class: true });
			children(i).forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", {});
			var div1_nodes = children(div1);
			t1 = claim_text(div1_nodes, t1_value);
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(i, "class", "fas fa-circle");
			add_location(i, file, 82, 25, 2313);
			add_location(div0, file, 82, 20, 2308);
			add_location(div1, file, 83, 20, 2370);
			add_location(div2, file, 81, 16, 2281);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div2, anchor);
			append_hydration_dev(div2, div0);
			append_hydration_dev(div0, i);
			append_hydration_dev(div2, t0);
			append_hydration_dev(div2, div1);
			append_hydration_dev(div1, t1);
			append_hydration_dev(div2, t2);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*errors*/ 1 && t1_value !== (t1_value = /*item*/ ctx[16].msg + "")) set_data_dev(t1, t1_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(81:12) {#each errors as item}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div9;
	let t0;
	let div0;
	let h1;
	let t1;
	let t2;
	let div8;
	let form;
	let div1;
	let label0;
	let t3;
	let t4;
	let input0;
	let t5;
	let div2;
	let label1;
	let t6;
	let t7;
	let input1;
	let t8;
	let div3;
	let label2;
	let t9;
	let t10;
	let input2;
	let t11;
	let div4;
	let label3;
	let t12;
	let t13;
	let input3;
	let t14;
	let div5;
	let label4;
	let t15;
	let t16;
	let input4;
	let t17;
	let div6;
	let label5;
	let t18;
	let t19;
	let textarea;
	let t20;
	let div7;
	let button;
	let t21;
	let mounted;
	let dispose;
	let if_block = /*errors*/ ctx[0].length > 0 && create_if_block(ctx);

	const block = {
		c: function create() {
			div9 = element("div");
			if (if_block) if_block.c();
			t0 = space();
			div0 = element("div");
			h1 = element("h1");
			t1 = text("Edit User");
			t2 = space();
			div8 = element("div");
			form = element("form");
			div1 = element("div");
			label0 = element("label");
			t3 = text("First Name:");
			t4 = space();
			input0 = element("input");
			t5 = space();
			div2 = element("div");
			label1 = element("label");
			t6 = text("Last Name:");
			t7 = space();
			input1 = element("input");
			t8 = space();
			div3 = element("div");
			label2 = element("label");
			t9 = text("Email:");
			t10 = space();
			input2 = element("input");
			t11 = space();
			div4 = element("div");
			label3 = element("label");
			t12 = text("Birthday:");
			t13 = space();
			input3 = element("input");
			t14 = space();
			div5 = element("div");
			label4 = element("label");
			t15 = text("Address:");
			t16 = space();
			input4 = element("input");
			t17 = space();
			div6 = element("div");
			label5 = element("label");
			t18 = text("Additional:");
			t19 = space();
			textarea = element("textarea");
			t20 = space();
			div7 = element("div");
			button = element("button");
			t21 = text("Save");
			this.h();
		},
		l: function claim(nodes) {
			div9 = claim_element(nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			if (if_block) if_block.l(div9_nodes);
			t0 = claim_space(div9_nodes);
			div0 = claim_element(div9_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Edit User");
			h1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t2 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			form = claim_element(div8_nodes, "FORM", { method: true });
			var form_nodes = children(form);
			div1 = claim_element(form_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			label0 = claim_element(div1_nodes, "LABEL", { class: true, for: true });
			var label0_nodes = children(label0);
			t3 = claim_text(label0_nodes, "First Name:");
			label0_nodes.forEach(detach_dev);
			t4 = claim_space(div1_nodes);

			input0 = claim_element(div1_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div1_nodes.forEach(detach_dev);
			t5 = claim_space(form_nodes);
			div2 = claim_element(form_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			label1 = claim_element(div2_nodes, "LABEL", { class: true, for: true });
			var label1_nodes = children(label1);
			t6 = claim_text(label1_nodes, "Last Name:");
			label1_nodes.forEach(detach_dev);
			t7 = claim_space(div2_nodes);

			input1 = claim_element(div2_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div2_nodes.forEach(detach_dev);
			t8 = claim_space(form_nodes);
			div3 = claim_element(form_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label2 = claim_element(div3_nodes, "LABEL", { class: true, for: true });
			var label2_nodes = children(label2);
			t9 = claim_text(label2_nodes, "Email:");
			label2_nodes.forEach(detach_dev);
			t10 = claim_space(div3_nodes);

			input2 = claim_element(div3_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div3_nodes.forEach(detach_dev);
			t11 = claim_space(form_nodes);
			div4 = claim_element(form_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			label3 = claim_element(div4_nodes, "LABEL", { class: true, for: true });
			var label3_nodes = children(label3);
			t12 = claim_text(label3_nodes, "Birthday:");
			label3_nodes.forEach(detach_dev);
			t13 = claim_space(div4_nodes);

			input3 = claim_element(div4_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div4_nodes.forEach(detach_dev);
			t14 = claim_space(form_nodes);
			div5 = claim_element(form_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			label4 = claim_element(div5_nodes, "LABEL", { class: true, for: true });
			var label4_nodes = children(label4);
			t15 = claim_text(label4_nodes, "Address:");
			label4_nodes.forEach(detach_dev);
			t16 = claim_space(div5_nodes);

			input4 = claim_element(div5_nodes, "INPUT", {
				type: true,
				id: true,
				name: true,
				class: true
			});

			div5_nodes.forEach(detach_dev);
			t17 = claim_space(form_nodes);
			div6 = claim_element(form_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			label5 = claim_element(div6_nodes, "LABEL", { class: true, for: true });
			var label5_nodes = children(label5);
			t18 = claim_text(label5_nodes, "Additional:");
			label5_nodes.forEach(detach_dev);
			t19 = claim_space(div6_nodes);
			textarea = claim_element(div6_nodes, "TEXTAREA", { id: true, rows: true, class: true });
			children(textarea).forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t20 = claim_space(form_nodes);
			div7 = claim_element(form_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			button = claim_element(div7_nodes, "BUTTON", { class: true, type: true });
			var button_nodes = children(button);
			t21 = claim_text(button_nodes, "Save");
			button_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file, 90, 8, 2500);
			attr_dev(div0, "class", "title svelte-1yjy231");
			add_location(div0, file, 89, 4, 2471);
			attr_dev(label0, "class", "form-label");
			attr_dev(label0, "for", "first-name");
			add_location(label0, file, 96, 16, 2690);
			attr_dev(input0, "type", "text");
			attr_dev(input0, "id", "first-name");
			attr_dev(input0, "name", "first_name");
			attr_dev(input0, "class", "form-control");
			input0.required = true;
			add_location(input0, file, 97, 16, 2771);
			attr_dev(div1, "class", "form-group svelte-1yjy231");
			add_location(div1, file, 95, 12, 2648);
			attr_dev(label1, "class", "form-label");
			attr_dev(label1, "for", "last-name");
			add_location(label1, file, 100, 16, 2953);
			attr_dev(input1, "type", "text");
			attr_dev(input1, "id", "last-name");
			attr_dev(input1, "name", "last_name");
			attr_dev(input1, "class", "form-control");
			input1.required = true;
			add_location(input1, file, 101, 16, 3032);
			attr_dev(div2, "class", "form-group svelte-1yjy231");
			add_location(div2, file, 99, 12, 2911);
			attr_dev(label2, "class", "form-label");
			attr_dev(label2, "for", "email");
			add_location(label2, file, 104, 16, 3211);
			attr_dev(input2, "type", "email");
			attr_dev(input2, "id", "email");
			attr_dev(input2, "name", "email");
			attr_dev(input2, "class", "form-control");
			input2.required = true;
			add_location(input2, file, 105, 16, 3282);
			attr_dev(div3, "class", "form-group svelte-1yjy231");
			add_location(div3, file, 103, 12, 3169);
			attr_dev(label3, "class", "form-label");
			attr_dev(label3, "for", "birthday");
			add_location(label3, file, 108, 16, 3451);
			attr_dev(input3, "type", "date");
			attr_dev(input3, "id", "birthday");
			attr_dev(input3, "name", "birthday");
			attr_dev(input3, "class", "form-control");
			input3.required = true;
			add_location(input3, file, 109, 16, 3528);
			attr_dev(div4, "class", "form-group svelte-1yjy231");
			add_location(div4, file, 107, 12, 3409);
			attr_dev(label4, "class", "form-label");
			attr_dev(label4, "for", "address");
			add_location(label4, file, 112, 16, 3705);
			attr_dev(input4, "type", "text");
			attr_dev(input4, "id", "address");
			attr_dev(input4, "name", "address");
			attr_dev(input4, "class", "form-control");
			input4.required = true;
			add_location(input4, file, 113, 16, 3780);
			attr_dev(div5, "class", "form-group svelte-1yjy231");
			add_location(div5, file, 111, 12, 3663);
			attr_dev(label5, "class", "form-label");
			attr_dev(label5, "for", "additional");
			add_location(label5, file, 116, 16, 3954);
			attr_dev(textarea, "id", "additional");
			attr_dev(textarea, "rows", "4");
			attr_dev(textarea, "class", "form-control svelte-1yjy231");
			textarea.required = true;
			add_location(textarea, file, 117, 16, 4035);
			attr_dev(div6, "class", "form-group svelte-1yjy231");
			add_location(div6, file, 115, 12, 3912);
			attr_dev(button, "class", "btn btn-primary");
			attr_dev(button, "type", "submit");
			add_location(button, file, 120, 16, 4211);
			attr_dev(div7, "class", "form-group svelte-1yjy231");
			add_location(div7, file, 119, 12, 4169);
			attr_dev(form, "method", "post");
			add_location(form, file, 94, 8, 2576);
			attr_dev(div8, "class", "form-container");
			add_location(div8, file, 93, 4, 2538);
			attr_dev(div9, "class", "container add-user svelte-1yjy231");
			add_location(div9, file, 76, 0, 2108);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div9, anchor);
			if (if_block) if_block.m(div9, null);
			append_hydration_dev(div9, t0);
			append_hydration_dev(div9, div0);
			append_hydration_dev(div0, h1);
			append_hydration_dev(h1, t1);
			append_hydration_dev(div9, t2);
			append_hydration_dev(div9, div8);
			append_hydration_dev(div8, form);
			append_hydration_dev(form, div1);
			append_hydration_dev(div1, label0);
			append_hydration_dev(label0, t3);
			append_hydration_dev(div1, t4);
			append_hydration_dev(div1, input0);
			set_input_value(input0, /*firstName*/ ctx[1]);
			append_hydration_dev(form, t5);
			append_hydration_dev(form, div2);
			append_hydration_dev(div2, label1);
			append_hydration_dev(label1, t6);
			append_hydration_dev(div2, t7);
			append_hydration_dev(div2, input1);
			set_input_value(input1, /*lastName*/ ctx[2]);
			append_hydration_dev(form, t8);
			append_hydration_dev(form, div3);
			append_hydration_dev(div3, label2);
			append_hydration_dev(label2, t9);
			append_hydration_dev(div3, t10);
			append_hydration_dev(div3, input2);
			set_input_value(input2, /*email*/ ctx[3]);
			append_hydration_dev(form, t11);
			append_hydration_dev(form, div4);
			append_hydration_dev(div4, label3);
			append_hydration_dev(label3, t12);
			append_hydration_dev(div4, t13);
			append_hydration_dev(div4, input3);
			set_input_value(input3, /*birthday*/ ctx[4]);
			append_hydration_dev(form, t14);
			append_hydration_dev(form, div5);
			append_hydration_dev(div5, label4);
			append_hydration_dev(label4, t15);
			append_hydration_dev(div5, t16);
			append_hydration_dev(div5, input4);
			set_input_value(input4, /*address*/ ctx[5]);
			append_hydration_dev(form, t17);
			append_hydration_dev(form, div6);
			append_hydration_dev(div6, label5);
			append_hydration_dev(label5, t18);
			append_hydration_dev(div6, t19);
			append_hydration_dev(div6, textarea);
			set_input_value(textarea, /*additional*/ ctx[6]);
			append_hydration_dev(form, t20);
			append_hydration_dev(form, div7);
			append_hydration_dev(div7, button);
			append_hydration_dev(button, t21);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[10]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[11]),
					listen_dev(input2, "input", /*input2_input_handler*/ ctx[12]),
					listen_dev(input3, "input", /*input3_input_handler*/ ctx[13]),
					listen_dev(input4, "input", /*input4_input_handler*/ ctx[14]),
					listen_dev(textarea, "input", /*textarea_input_handler*/ ctx[15]),
					listen_dev(form, "submit", prevent_default(/*submitForm*/ ctx[7]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (/*errors*/ ctx[0].length > 0) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(div9, t0);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*firstName*/ 2 && input0.value !== /*firstName*/ ctx[1]) {
				set_input_value(input0, /*firstName*/ ctx[1]);
			}

			if (dirty & /*lastName*/ 4 && input1.value !== /*lastName*/ ctx[2]) {
				set_input_value(input1, /*lastName*/ ctx[2]);
			}

			if (dirty & /*email*/ 8 && input2.value !== /*email*/ ctx[3]) {
				set_input_value(input2, /*email*/ ctx[3]);
			}

			if (dirty & /*birthday*/ 16) {
				set_input_value(input3, /*birthday*/ ctx[4]);
			}

			if (dirty & /*address*/ 32 && input4.value !== /*address*/ ctx[5]) {
				set_input_value(input4, /*address*/ ctx[5]);
			}

			if (dirty & /*additional*/ 64) {
				set_input_value(textarea, /*additional*/ ctx[6]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div9);
			if (if_block) if_block.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload(page, session) {
	// the `slug` parameter is available because
	// this file is called [slug].svelte
	const res = await this.fetch(`/user/${page.params.id}.json`);

	const data = await res.json();

	if (res.status === 200) {
		return { post: data, role: session.role };
	} else {
		this.error(res.status, data.message);
	}
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('U5Bidu5D', slots, []);
	let { post } = $$props;
	let { role } = $$props;
	let errors = [];
	let firstName = post.first_name;
	let lastName = post.last_name;
	let email = post.email;
	let birthday = post.birthday;
	let address = post.address;
	let additional = post.additional;

	async function submitForm() {
		const response = await fetch("/admin/edit-user/" + post.id, {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
				Accept: "application/json"
			},
			body: JSON.stringify({
				first_name: firstName,
				last_name: lastName,
				email,
				birthday,
				address,
				additional,
				company_id: post.company_id
			})
		});

		const parsed = await response.json();

		if (parsed.error) {
			if (parsed.error.errors) {
				$$invalidate(0, errors = parsed.error.errors);
			} else {
				$$invalidate(0, errors = [{ msg: parsed.error.error }]);
			}
		} else {
			if (role == 2) {
				location.href = '/gadmin/companies/' + post.company_id;
			} else {
				location.href = '/admin/customers';
			}
		}
	}

	$$self.$$.on_mount.push(function () {
		if (post === undefined && !('post' in $$props || $$self.$$.bound[$$self.$$.props['post']])) {
			console.warn("<U5Bidu5D> was created without expected prop 'post'");
		}

		if (role === undefined && !('role' in $$props || $$self.$$.bound[$$self.$$.props['role']])) {
			console.warn("<U5Bidu5D> was created without expected prop 'role'");
		}
	});

	const writable_props = ['post', 'role'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<U5Bidu5D> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		firstName = this.value;
		$$invalidate(1, firstName);
	}

	function input1_input_handler() {
		lastName = this.value;
		$$invalidate(2, lastName);
	}

	function input2_input_handler() {
		email = this.value;
		$$invalidate(3, email);
	}

	function input3_input_handler() {
		birthday = this.value;
		$$invalidate(4, birthday);
	}

	function input4_input_handler() {
		address = this.value;
		$$invalidate(5, address);
	}

	function textarea_input_handler() {
		additional = this.value;
		$$invalidate(6, additional);
	}

	$$self.$$set = $$props => {
		if ('post' in $$props) $$invalidate(8, post = $$props.post);
		if ('role' in $$props) $$invalidate(9, role = $$props.role);
	};

	$$self.$capture_state = () => ({
		preload,
		post,
		role,
		errors,
		firstName,
		lastName,
		email,
		birthday,
		address,
		additional,
		submitForm
	});

	$$self.$inject_state = $$props => {
		if ('post' in $$props) $$invalidate(8, post = $$props.post);
		if ('role' in $$props) $$invalidate(9, role = $$props.role);
		if ('errors' in $$props) $$invalidate(0, errors = $$props.errors);
		if ('firstName' in $$props) $$invalidate(1, firstName = $$props.firstName);
		if ('lastName' in $$props) $$invalidate(2, lastName = $$props.lastName);
		if ('email' in $$props) $$invalidate(3, email = $$props.email);
		if ('birthday' in $$props) $$invalidate(4, birthday = $$props.birthday);
		if ('address' in $$props) $$invalidate(5, address = $$props.address);
		if ('additional' in $$props) $$invalidate(6, additional = $$props.additional);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		errors,
		firstName,
		lastName,
		email,
		birthday,
		address,
		additional,
		submitForm,
		post,
		role,
		input0_input_handler,
		input1_input_handler,
		input2_input_handler,
		input3_input_handler,
		input4_input_handler,
		textarea_input_handler
	];
}

class U5Bidu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { post: 8, role: 9 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bidu5D",
			options,
			id: create_fragment.name
		});
	}

	get post() {
		throw new Error("<U5Bidu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set post(value) {
		throw new Error("<U5Bidu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get role() {
		throw new Error("<U5Bidu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set role(value) {
		throw new Error("<U5Bidu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { U5Bidu5D as default, preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
