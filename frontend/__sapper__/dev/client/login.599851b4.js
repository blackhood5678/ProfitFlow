import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, R as stores$1, T as validate_store, U as component_subscribe, V as goto, l as space, e as element, t as text, m as head_selector, f as detach_dev, p as claim_space, c as claim_element, a as children, b as claim_text, g as add_location, q as attr_dev, h as insert_hydration_dev, j as append_hydration_dev, u as set_input_value, w as listen_dev, E as prevent_default, n as noop, y as run_all, W as set_store_value, z as set_data_dev } from './client.38617a5e.js';

/* src\routes\login.svelte generated by Svelte v3.55.1 */
const file = "src\\routes\\login.svelte";

// (109:28) {#if error}
function create_if_block(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text(/*error*/ ctx[2]);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, /*error*/ ctx[2]);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "error-messages text-danger");
			add_location(p, file, 109, 32, 3689);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, p, anchor);
			append_hydration_dev(p, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*error*/ 4) set_data_dev(t, /*error*/ ctx[2]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(109:28) {#if error}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let div11;
	let div10;
	let div2;
	let div0;
	let h10;
	let t1;
	let t2;
	let div1;
	let p0;
	let t3;
	let t4;
	let div3;
	let t5;
	let div9;
	let div8;
	let div4;
	let h11;
	let t6;
	let t7;
	let form;
	let fieldset0;
	let label0;
	let i0;
	let t8;
	let input0;
	let t9;
	let fieldset1;
	let label1;
	let i1;
	let t10;
	let input1;
	let t11;
	let fieldset2;
	let label2;
	let t12;
	let div5;
	let t13;
	let div6;
	let button;
	let t14;
	let t15;
	let div7;
	let p1;
	let t16;
	let br;
	let t17;
	let a;
	let t18;
	let mounted;
	let dispose;
	let if_block = /*error*/ ctx[2] && create_if_block(ctx);

	const block = {
		c: function create() {
			t0 = space();
			div11 = element("div");
			div10 = element("div");
			div2 = element("div");
			div0 = element("div");
			h10 = element("h1");
			t1 = text("Welcome to ProfitFlow");
			t2 = space();
			div1 = element("div");
			p0 = element("p");
			t3 = text("Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet");
			t4 = space();
			div3 = element("div");
			t5 = space();
			div9 = element("div");
			div8 = element("div");
			div4 = element("div");
			h11 = element("h1");
			t6 = text("Login");
			t7 = space();
			form = element("form");
			fieldset0 = element("fieldset");
			label0 = element("label");
			i0 = element("i");
			t8 = space();
			input0 = element("input");
			t9 = space();
			fieldset1 = element("fieldset");
			label1 = element("label");
			i1 = element("i");
			t10 = space();
			input1 = element("input");
			t11 = space();
			fieldset2 = element("fieldset");
			label2 = element("label");
			t12 = space();
			div5 = element("div");
			if (if_block) if_block.c();
			t13 = space();
			div6 = element("div");
			button = element("button");
			t14 = text("Sign in");
			t15 = space();
			div7 = element("div");
			p1 = element("p");
			t16 = text("Don't have an account?");
			br = element("br");
			t17 = space();
			a = element("a");
			t18 = text("Create one!");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = head_selector('svelte-g6l3m8', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div11 = claim_element(nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div2 = claim_element(div10_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h10 = claim_element(div0_nodes, "H1", {});
			var h10_nodes = children(h10);
			t1 = claim_text(h10_nodes, "Welcome to ProfitFlow");
			h10_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			p0 = claim_element(div1_nodes, "P", {});
			var p0_nodes = children(p0);
			t3 = claim_text(p0_nodes, "Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet\r\n                    Lorem imsum dolor sit amet");
			p0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t4 = claim_space(div10_nodes);
			div3 = claim_element(div10_nodes, "DIV", { class: true });
			children(div3).forEach(detach_dev);
			t5 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div4 = claim_element(div8_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			h11 = claim_element(div4_nodes, "H1", { class: true });
			var h11_nodes = children(h11);
			t6 = claim_text(h11_nodes, "Login");
			h11_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t7 = claim_space(div8_nodes);
			form = claim_element(div8_nodes, "FORM", { method: true });
			var form_nodes = children(form);
			fieldset0 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset0_nodes = children(fieldset0);
			label0 = claim_element(fieldset0_nodes, "LABEL", { class: true });
			var label0_nodes = children(label0);
			i0 = claim_element(label0_nodes, "I", { class: true });
			children(i0).forEach(detach_dev);
			label0_nodes.forEach(detach_dev);
			t8 = claim_space(fieldset0_nodes);

			input0 = claim_element(fieldset0_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset0_nodes.forEach(detach_dev);
			t9 = claim_space(form_nodes);
			fieldset1 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset1_nodes = children(fieldset1);
			label1 = claim_element(fieldset1_nodes, "LABEL", { class: true });
			var label1_nodes = children(label1);
			i1 = claim_element(label1_nodes, "I", { class: true });
			children(i1).forEach(detach_dev);
			label1_nodes.forEach(detach_dev);
			t10 = claim_space(fieldset1_nodes);

			input1 = claim_element(fieldset1_nodes, "INPUT", {
				class: true,
				name: true,
				type: true,
				placeholder: true
			});

			fieldset1_nodes.forEach(detach_dev);
			t11 = claim_space(form_nodes);
			fieldset2 = claim_element(form_nodes, "FIELDSET", { class: true });
			var fieldset2_nodes = children(fieldset2);
			label2 = claim_element(fieldset2_nodes, "LABEL", { class: true });
			children(label2).forEach(detach_dev);
			t12 = claim_space(fieldset2_nodes);
			div5 = claim_element(fieldset2_nodes, "DIV", {});
			var div5_nodes = children(div5);
			if (if_block) if_block.l(div5_nodes);
			div5_nodes.forEach(detach_dev);
			fieldset2_nodes.forEach(detach_dev);
			t13 = claim_space(form_nodes);
			div6 = claim_element(form_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			button = claim_element(div6_nodes, "BUTTON", { class: true, type: true });
			var button_nodes = children(button);
			t14 = claim_text(button_nodes, "Sign in");
			button_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t15 = claim_space(form_nodes);
			div7 = claim_element(form_nodes, "DIV", {});
			var div7_nodes = children(div7);
			p1 = claim_element(div7_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t16 = claim_text(p1_nodes, "Don't have an account?");
			br = claim_element(p1_nodes, "BR", {});
			t17 = claim_space(p1_nodes);
			a = claim_element(p1_nodes, "A", { href: true });
			var a_nodes = children(a);
			t18 = claim_text(a_nodes, "Create one!");
			a_nodes.forEach(detach_dev);
			p1_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Login â€¢ ProfitFlow";
			add_location(h10, file, 55, 16, 1591);
			attr_dev(div0, "class", "svelte-1saipe1");
			add_location(div0, file, 54, 12, 1568);
			add_location(p0, file, 58, 16, 1678);
			attr_dev(div1, "class", "svelte-1saipe1");
			add_location(div1, file, 57, 12, 1655);
			attr_dev(div2, "class", "col-7 svelte-1saipe1");
			add_location(div2, file, 53, 8, 1535);
			attr_dev(div3, "class", "spliter svelte-1saipe1");
			add_location(div3, file, 70, 8, 2093);
			attr_dev(h11, "class", "text-xs-center");
			add_location(h11, file, 75, 20, 2228);
			attr_dev(div4, "class", " svelte-1saipe1");
			add_location(div4, file, 74, 16, 2192);
			attr_dev(i0, "class", "far fa-user-circle");
			add_location(i0, file, 81, 28, 2489);
			attr_dev(label0, "class", "svelte-1saipe1");
			add_location(label0, file, 80, 24, 2452);
			attr_dev(input0, "class", "form-control form-control-lg svelte-1saipe1");
			attr_dev(input0, "name", "email");
			attr_dev(input0, "type", "email");
			input0.required = true;
			attr_dev(input0, "placeholder", "Email");
			add_location(input0, file, 83, 24, 2583);
			attr_dev(fieldset0, "class", "form-group mb-3 svelte-1saipe1");
			add_location(fieldset0, file, 79, 20, 2392);
			attr_dev(i1, "class", "fas fa-lock");
			add_location(i1, file, 93, 28, 3045);
			attr_dev(label1, "class", "svelte-1saipe1");
			add_location(label1, file, 92, 24, 3008);
			attr_dev(input1, "class", "form-control form-control-lg svelte-1saipe1");
			attr_dev(input1, "name", "password");
			attr_dev(input1, "type", "password");
			input1.required = true;
			attr_dev(input1, "placeholder", "Password");
			add_location(input1, file, 95, 24, 3132);
			attr_dev(fieldset1, "class", "form-group mb-3 svelte-1saipe1");
			add_location(fieldset1, file, 91, 20, 2948);
			attr_dev(label2, "class", "svelte-1saipe1");
			add_location(label2, file, 105, 24, 3566);
			add_location(div5, file, 107, 24, 3609);
			attr_dev(fieldset2, "class", "form-group svelte-1saipe1");
			add_location(fieldset2, file, 104, 20, 3511);
			attr_dev(button, "class", "btn btn-lg btn-primary pull-xs-right svelte-1saipe1");
			attr_dev(button, "type", "submit");
			add_location(button, file, 116, 24, 3913);
			attr_dev(div6, "class", "btn-group svelte-1saipe1");
			add_location(div6, file, 115, 20, 3864);
			add_location(br, file, 121, 50, 4157);
			attr_dev(a, "href", "/register");
			add_location(a, file, 122, 28, 4191);
			attr_dev(p1, "class", "text-xs-center");
			add_location(p1, file, 120, 24, 4079);
			add_location(div7, file, 119, 20, 4048);
			attr_dev(form, "method", "post");
			add_location(form, file, 78, 16, 2309);
			attr_dev(div8, "class", " svelte-1saipe1");
			add_location(div8, file, 73, 12, 2160);
			attr_dev(div9, "class", " svelte-1saipe1");
			add_location(div9, file, 72, 8, 2132);
			attr_dev(div10, "class", "row svelte-1saipe1");
			add_location(div10, file, 52, 4, 1508);
			attr_dev(div11, "class", "auth-page container-fluid svelte-1saipe1");
			add_location(div11, file, 51, 0, 1463);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, div11, anchor);
			append_hydration_dev(div11, div10);
			append_hydration_dev(div10, div2);
			append_hydration_dev(div2, div0);
			append_hydration_dev(div0, h10);
			append_hydration_dev(h10, t1);
			append_hydration_dev(div2, t2);
			append_hydration_dev(div2, div1);
			append_hydration_dev(div1, p0);
			append_hydration_dev(p0, t3);
			append_hydration_dev(div10, t4);
			append_hydration_dev(div10, div3);
			append_hydration_dev(div10, t5);
			append_hydration_dev(div10, div9);
			append_hydration_dev(div9, div8);
			append_hydration_dev(div8, div4);
			append_hydration_dev(div4, h11);
			append_hydration_dev(h11, t6);
			append_hydration_dev(div8, t7);
			append_hydration_dev(div8, form);
			append_hydration_dev(form, fieldset0);
			append_hydration_dev(fieldset0, label0);
			append_hydration_dev(label0, i0);
			append_hydration_dev(fieldset0, t8);
			append_hydration_dev(fieldset0, input0);
			set_input_value(input0, /*email*/ ctx[1]);
			append_hydration_dev(form, t9);
			append_hydration_dev(form, fieldset1);
			append_hydration_dev(fieldset1, label1);
			append_hydration_dev(label1, i1);
			append_hydration_dev(fieldset1, t10);
			append_hydration_dev(fieldset1, input1);
			set_input_value(input1, /*password*/ ctx[0]);
			append_hydration_dev(form, t11);
			append_hydration_dev(form, fieldset2);
			append_hydration_dev(fieldset2, label2);
			append_hydration_dev(fieldset2, t12);
			append_hydration_dev(fieldset2, div5);
			if (if_block) if_block.m(div5, null);
			append_hydration_dev(form, t13);
			append_hydration_dev(form, div6);
			append_hydration_dev(div6, button);
			append_hydration_dev(button, t14);
			append_hydration_dev(form, t15);
			append_hydration_dev(form, div7);
			append_hydration_dev(div7, p1);
			append_hydration_dev(p1, t16);
			append_hydration_dev(p1, br);
			append_hydration_dev(p1, t17);
			append_hydration_dev(p1, a);
			append_hydration_dev(a, t18);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[5]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[6]),
					listen_dev(form, "submit", prevent_default(/*handleLogin*/ ctx[4]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*email*/ 2 && input0.value !== /*email*/ ctx[1]) {
				set_input_value(input0, /*email*/ ctx[1]);
			}

			if (dirty & /*password*/ 1 && input1.value !== /*password*/ ctx[0]) {
				set_input_value(input1, /*password*/ ctx[0]);
			}

			if (/*error*/ ctx[2]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(div5, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div11);
			if (if_block) if_block.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $session;
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Login', slots, []);
	const { session } = stores$1();
	validate_store(session, 'session');
	component_subscribe($$self, session, value => $$invalidate(7, $session = value));
	let password = "";
	let email = "";
	let error;

	const handleLogin = async () => {
		const response = await fetch("/login", {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
				Accept: "application/json"
			},
			body: JSON.stringify({ email, password })
		});

		const parsed = await response.json();

		if (parsed.error) {
			$$invalidate(2, error = parsed.error);
		} else {
			set_store_value(session, $session.token_id = parsed.token_id, $session);
			set_store_value(session, $session.role = parsed.role, $session);
			set_store_value(session, $session.token = parsed.token, $session);
			localStorage.setItem('token_id', parsed.token_id);
			localStorage.setItem('role', parsed.role);
			localStorage.setItem('token', parsed.token);

			// console.log(parsed);
			if (parsed.role == 0) {
				// customer
				location.href = '/converter';
			} else if (parsed.role == 1) {
				// admin
				location.href = '/admin/customers';
			} else if (parsed.role == 2) {
				// global admin
				location.href = '/gadmin/companies';
			} else {
				//
				location.href = '/';
			}
		}
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Login> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		email = this.value;
		$$invalidate(1, email);
	}

	function input1_input_handler() {
		password = this.value;
		$$invalidate(0, password);
	}

	$$self.$capture_state = () => ({
		goto,
		stores: stores$1,
		session,
		password,
		email,
		error,
		handleLogin,
		$session
	});

	$$self.$inject_state = $$props => {
		if ('password' in $$props) $$invalidate(0, password = $$props.password);
		if ('email' in $$props) $$invalidate(1, email = $$props.email);
		if ('error' in $$props) $$invalidate(2, error = $$props.error);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		password,
		email,
		error,
		session,
		handleLogin,
		input0_input_handler,
		input1_input_handler
	];
}

class Login extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Login",
			options,
			id: create_fragment.name
		});
	}
}

export { Login as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
