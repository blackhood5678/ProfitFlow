import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, k as validate_each_argument, v as validate_slots, o as onMount, l as space, A as create_component, e as element, t as text, m as head_selector, f as detach_dev, p as claim_space, B as claim_component, c as claim_element, a as children, b as claim_text, g as add_location, q as attr_dev, C as set_style, r as src_url_equal, h as insert_hydration_dev, D as mount_component, j as append_hydration_dev, u as set_input_value, w as listen_dev, G as transition_in, H as transition_out, I as destroy_component, x as destroy_each, y as run_all, O as is_function, z as set_data_dev } from './client.38617a5e.js';
import { M as Modal } from './Modal.f38ccd69.js';
import { T as Toast } from './Toast.0a10c4d3.js';
import { a as axios } from './axios.10fb4daa.js';

/* src\routes\gadmin\companies\index.svelte generated by Svelte v3.55.1 */
const file = "src\\routes\\gadmin\\companies\\index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[14] = list[i];
	return child_ctx;
}

// (131:6) {#each posts as item}
function create_each_block(ctx) {
	let tr;
	let td0;
	let a0;
	let t0_value = /*item*/ ctx[14].name + "";
	let t0;
	let a0_href_value;
	let t1;
	let td1;
	let a1;
	let i0;
	let a1_href_value;
	let t2;
	let td2;
	let span;
	let i1;
	let t3;
	let mounted;
	let dispose;

	function click_handler() {
		return /*click_handler*/ ctx[8](/*item*/ ctx[14]);
	}

	const block = {
		c: function create() {
			tr = element("tr");
			td0 = element("td");
			a0 = element("a");
			t0 = text(t0_value);
			t1 = space();
			td1 = element("td");
			a1 = element("a");
			i0 = element("i");
			t2 = space();
			td2 = element("td");
			span = element("span");
			i1 = element("i");
			t3 = space();
			this.h();
		},
		l: function claim(nodes) {
			tr = claim_element(nodes, "TR", {});
			var tr_nodes = children(tr);
			td0 = claim_element(tr_nodes, "TD", {});
			var td0_nodes = children(td0);
			a0 = claim_element(td0_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			t0 = claim_text(a0_nodes, t0_value);
			a0_nodes.forEach(detach_dev);
			td0_nodes.forEach(detach_dev);
			t1 = claim_space(tr_nodes);
			td1 = claim_element(tr_nodes, "TD", { class: true });
			var td1_nodes = children(td1);
			a1 = claim_element(td1_nodes, "A", { class: true, href: true });
			var a1_nodes = children(a1);
			i0 = claim_element(a1_nodes, "I", { class: true });
			children(i0).forEach(detach_dev);
			a1_nodes.forEach(detach_dev);
			td1_nodes.forEach(detach_dev);
			t2 = claim_space(tr_nodes);
			td2 = claim_element(tr_nodes, "TD", { class: true });
			var td2_nodes = children(td2);
			span = claim_element(td2_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			i1 = claim_element(span_nodes, "I", { class: true });
			children(i1).forEach(detach_dev);
			span_nodes.forEach(detach_dev);
			td2_nodes.forEach(detach_dev);
			t3 = claim_space(tr_nodes);
			tr_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a0, "href", a0_href_value = "/gadmin/companies/" + /*item*/ ctx[14].id);
			add_location(a0, file, 132, 12, 3007);
			add_location(td0, file, 132, 8, 3003);
			attr_dev(i0, "class", "fas fa-edit");
			add_location(i0, file, 133, 82, 3198);
			attr_dev(a1, "class", "text-body");
			attr_dev(a1, "href", a1_href_value = "/admin/edit-user/" + /*item*/ ctx[14].id);
			add_location(a1, file, 133, 27, 3143);
			attr_dev(td1, "class", "center");
			add_location(td1, file, 133, 8, 3124);
			attr_dev(i1, "class", "fas fa-trash-alt");
			add_location(i1, file, 134, 92, 3328);
			attr_dev(span, "class", "link");
			add_location(span, file, 134, 27, 3263);
			attr_dev(td2, "class", "center");
			add_location(td2, file, 134, 8, 3244);
			add_location(tr, file, 131, 7, 2989);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, tr, anchor);
			append_hydration_dev(tr, td0);
			append_hydration_dev(td0, a0);
			append_hydration_dev(a0, t0);
			append_hydration_dev(tr, t1);
			append_hydration_dev(tr, td1);
			append_hydration_dev(td1, a1);
			append_hydration_dev(a1, i0);
			append_hydration_dev(tr, t2);
			append_hydration_dev(tr, td2);
			append_hydration_dev(td2, span);
			append_hydration_dev(span, i1);
			append_hydration_dev(tr, t3);

			if (!mounted) {
				dispose = [
					listen_dev(
						a0,
						"click",
						function () {
							if (is_function(setCurrentCompany(/*item*/ ctx[14].name, /*item*/ ctx[14].id))) setCurrentCompany(/*item*/ ctx[14].name, /*item*/ ctx[14].id).apply(this, arguments);
						},
						false,
						false,
						false
					),
					listen_dev(span, "click", click_handler, false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*posts*/ 1 && t0_value !== (t0_value = /*item*/ ctx[14].name + "")) set_data_dev(t0, t0_value);

			if (dirty & /*posts*/ 1 && a0_href_value !== (a0_href_value = "/gadmin/companies/" + /*item*/ ctx[14].id)) {
				attr_dev(a0, "href", a0_href_value);
			}

			if (dirty & /*posts*/ 1 && a1_href_value !== (a1_href_value = "/admin/edit-user/" + /*item*/ ctx[14].id)) {
				attr_dev(a1, "href", a1_href_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(tr);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(131:6) {#each posts as item}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let modal;
	let t1;
	let toast;
	let t2;
	let div8;
	let div4;
	let div0;
	let h1;
	let t3;
	let t4;
	let div1;
	let t5;
	let div2;
	let a;
	let i;
	let t6;
	let div3;
	let label;
	let img;
	let img_src_value;
	let t7;
	let input;
	let t8;
	let div7;
	let div6;
	let div5;
	let table;
	let thead;
	let tr;
	let th0;
	let t9;
	let t10;
	let th1;
	let t11;
	let t12;
	let th2;
	let t13;
	let t14;
	let tbody;
	let current;
	let mounted;
	let dispose;

	modal = new Modal({
			props: {
				confirmText: /*confirmText*/ ctx[2],
				confirmYesEvent: /*deleteAction*/ ctx[6]
			},
			$$inline: true
		});

	toast = new Toast({
			props: { toastBody: /*toastBody*/ ctx[1] },
			$$inline: true
		});

	let each_value = /*posts*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			t0 = space();
			create_component(modal.$$.fragment);
			t1 = space();
			create_component(toast.$$.fragment);
			t2 = space();
			div8 = element("div");
			div4 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t3 = text("Companies");
			t4 = space();
			div1 = element("div");
			t5 = space();
			div2 = element("div");
			a = element("a");
			i = element("i");
			t6 = space();
			div3 = element("div");
			label = element("label");
			img = element("img");
			t7 = space();
			input = element("input");
			t8 = space();
			div7 = element("div");
			div6 = element("div");
			div5 = element("div");
			table = element("table");
			thead = element("thead");
			tr = element("tr");
			th0 = element("th");
			t9 = text("Name");
			t10 = space();
			th1 = element("th");
			t11 = text("Edit");
			t12 = space();
			th2 = element("th");
			t13 = text("Delete");
			t14 = space();
			tbody = element("tbody");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = head_selector('svelte-1qy41f7', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(modal.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(toast.$$.fragment, nodes);
			t2 = claim_space(nodes);
			div8 = claim_element(nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div4 = claim_element(div8_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div0 = claim_element(div4_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", {});
			var h1_nodes = children(h1);
			t3 = claim_text(h1_nodes, "Companies");
			h1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t4 = claim_space(div4_nodes);
			div1 = claim_element(div4_nodes, "DIV", { style: true, class: true });
			children(div1).forEach(detach_dev);
			t5 = claim_space(div4_nodes);
			div2 = claim_element(div4_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			a = claim_element(div2_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			i = claim_element(a_nodes, "I", { class: true });
			children(i).forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t6 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label = claim_element(div3_nodes, "LABEL", { class: true });
			var label_nodes = children(label);

			img = claim_element(label_nodes, "IMG", {
				src: true,
				alt: true,
				id: true,
				class: true
			});

			label_nodes.forEach(detach_dev);
			t7 = claim_space(div3_nodes);
			input = claim_element(div3_nodes, "INPUT", { class: true, type: true, id: true });
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t8 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			table = claim_element(div5_nodes, "TABLE", { class: true });
			var table_nodes = children(table);
			thead = claim_element(table_nodes, "THEAD", {});
			var thead_nodes = children(thead);
			tr = claim_element(thead_nodes, "TR", {});
			var tr_nodes = children(tr);
			th0 = claim_element(tr_nodes, "TH", {});
			var th0_nodes = children(th0);
			t9 = claim_text(th0_nodes, "Name");
			th0_nodes.forEach(detach_dev);
			t10 = claim_space(tr_nodes);
			th1 = claim_element(tr_nodes, "TH", { class: true });
			var th1_nodes = children(th1);
			t11 = claim_text(th1_nodes, "Edit");
			th1_nodes.forEach(detach_dev);
			t12 = claim_space(tr_nodes);
			th2 = claim_element(tr_nodes, "TH", { class: true });
			var th2_nodes = children(th2);
			t13 = claim_text(th2_nodes, "Delete");
			th2_nodes.forEach(detach_dev);
			tr_nodes.forEach(detach_dev);
			thead_nodes.forEach(detach_dev);
			t14 = claim_space(table_nodes);
			tbody = claim_element(table_nodes, "TBODY", {});
			var tbody_nodes = children(tbody);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(tbody_nodes);
			}

			tbody_nodes.forEach(detach_dev);
			table_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Companies | ProfitFLow";
			add_location(h1, file, 100, 3, 2240);
			attr_dev(div0, "class", "svelte-1988fds");
			add_location(div0, file, 99, 2, 2230);
			set_style(div1, "flex-grow", "1");
			attr_dev(div1, "class", "svelte-1988fds");
			add_location(div1, file, 103, 2, 2274);
			attr_dev(i, "class", "fas fa-plus");
			add_location(i, file, 106, 33, 2370);
			attr_dev(a, "href", "/gadmin/add-company");
			attr_dev(a, "class", "svelte-1988fds");
			add_location(a, file, 106, 3, 2340);
			attr_dev(div2, "class", "add-user svelte-1988fds");
			add_location(div2, file, 105, 2, 2313);
			if (!src_url_equal(img.src, img_src_value = "/user-search.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "search user svg");
			attr_dev(img, "id", "svg-user-search");
			attr_dev(img, "class", "svelte-1988fds");
			add_location(img, file, 111, 4, 2440);
			attr_dev(label, "class", "svelte-1988fds");
			add_location(label, file, 110, 3, 2427);
			attr_dev(input, "class", "form-control svelte-1988fds");
			attr_dev(input, "type", "text");
			attr_dev(input, "id", "input-search");
			add_location(input, file, 114, 3, 2531);
			attr_dev(div3, "class", "svelte-1988fds");
			add_location(div3, file, 109, 2, 2417);
			attr_dev(div4, "class", "search-bar container d-flex justify-content-between svelte-1988fds");
			add_location(div4, file, 98, 1, 2161);
			add_location(th0, file, 124, 6, 2823);
			attr_dev(th1, "class", "center");
			add_location(th1, file, 125, 6, 2844);
			attr_dev(th2, "class", "center");
			add_location(th2, file, 126, 6, 2880);
			add_location(tr, file, 123, 5, 2811);
			add_location(thead, file, 122, 5, 2797);
			add_location(tbody, file, 129, 5, 2944);
			attr_dev(table, "class", "table");
			add_location(table, file, 121, 4, 2769);
			attr_dev(div5, "class", "col-md-12 converter-list");
			add_location(div5, file, 120, 3, 2725);
			attr_dev(div6, "class", "row");
			add_location(div6, file, 119, 2, 2703);
			attr_dev(div7, "class", "container page svelte-1988fds");
			add_location(div7, file, 118, 1, 2671);
			attr_dev(div8, "class", "home-page svelte-1988fds");
			add_location(div8, file, 97, 0, 2135);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			mount_component(modal, target, anchor);
			insert_hydration_dev(target, t1, anchor);
			mount_component(toast, target, anchor);
			insert_hydration_dev(target, t2, anchor);
			insert_hydration_dev(target, div8, anchor);
			append_hydration_dev(div8, div4);
			append_hydration_dev(div4, div0);
			append_hydration_dev(div0, h1);
			append_hydration_dev(h1, t3);
			append_hydration_dev(div4, t4);
			append_hydration_dev(div4, div1);
			append_hydration_dev(div4, t5);
			append_hydration_dev(div4, div2);
			append_hydration_dev(div2, a);
			append_hydration_dev(a, i);
			append_hydration_dev(div4, t6);
			append_hydration_dev(div4, div3);
			append_hydration_dev(div3, label);
			append_hydration_dev(label, img);
			append_hydration_dev(div3, t7);
			append_hydration_dev(div3, input);
			set_input_value(input, /*searchQuery*/ ctx[3]);
			append_hydration_dev(div8, t8);
			append_hydration_dev(div8, div7);
			append_hydration_dev(div7, div6);
			append_hydration_dev(div6, div5);
			append_hydration_dev(div5, table);
			append_hydration_dev(table, thead);
			append_hydration_dev(thead, tr);
			append_hydration_dev(tr, th0);
			append_hydration_dev(th0, t9);
			append_hydration_dev(tr, t10);
			append_hydration_dev(tr, th1);
			append_hydration_dev(th1, t11);
			append_hydration_dev(tr, t12);
			append_hydration_dev(tr, th2);
			append_hydration_dev(th2, t13);
			append_hydration_dev(table, t14);
			append_hydration_dev(table, tbody);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(tbody, null);
			}

			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(input, "input", /*input_input_handler*/ ctx[7]),
					listen_dev(input, "keypress", /*inputKeypressEvent*/ ctx[4], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			const modal_changes = {};
			if (dirty & /*confirmText*/ 4) modal_changes.confirmText = /*confirmText*/ ctx[2];
			modal.$set(modal_changes);
			const toast_changes = {};
			if (dirty & /*toastBody*/ 2) toast_changes.toastBody = /*toastBody*/ ctx[1];
			toast.$set(toast_changes);

			if (dirty & /*searchQuery*/ 8 && input.value !== /*searchQuery*/ ctx[3]) {
				set_input_value(input, /*searchQuery*/ ctx[3]);
			}

			if (dirty & /*clickDeleteCustomer, posts, setCurrentCompany*/ 33) {
				each_value = /*posts*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(tbody, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(modal.$$.fragment, local);
			transition_in(toast.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(modal.$$.fragment, local);
			transition_out(toast.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(modal, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(toast, detaching);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(div8);
			destroy_each(each_blocks, detaching);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload({ query }) {
	let url = '/gadmin/companies.json?';

	if (!!query.q) {
		url += 'q=' + query.q;
	}

	return this.fetch(url).then(r => r.json()).then(posts => {
		return { posts };
	});
}

function setCurrentCompany(name, id) {
	localStorage.setItem('currentCompanyName', name);
	localStorage.setItem('currentCompanyId', id);
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Companies', slots, []);
	let { posts } = $$props;
	let toastBody;
	let showModal;
	let showConfirm = false;
	let confirmText;
	let confirmModal;
	let searchQuery = '';

	onMount(async () => {
		$$invalidate(3, searchQuery = localStorage.getItem("searchQuery") || "");
	});

	const handleSubmit = () => {
		localStorage.setItem("searchQuery", searchQuery);
		location.href = location.pathname + `?q=${searchQuery}`;
	};

	const inputKeypressEvent = e => {
		if (e.keyCode === 13) {
			handleSubmit();
		}
	};

	function controlConfirm() {
		// document.getElementById("btn-confirm-modal").click();
		confirmModal = new bootstrap.Modal('#myModal');

		confirmModal.show();
	}

	function clickDeleteCustomer(id) {
		$$invalidate(2, confirmText = 'Are you sure you want to delete this company?');
		localStorage.setItem('currentCustomerId', id);
		controlConfirm();
	}

	function deleteAction() {
		let id = localStorage.getItem('currentCustomerId');
		confirmModal.hide();
		const { BACKEND_HOST } = process.env;

		axios.delete(BACKEND_HOST + '/api/companies/' + id).then(response => {
			// handle success
			// console.log(response.data)
			// console.log(response.data);
			$$invalidate(1, toastBody = "Deleted successfully!");

			showToast();
		}).catch(error => {
			// console.log(error);
			$$invalidate(1, toastBody = "Error happened!");

			showToast();
		});
	}

	$$self.$$.on_mount.push(function () {
		if (posts === undefined && !('posts' in $$props || $$self.$$.bound[$$self.$$.props['posts']])) {
			console.warn("<Companies> was created without expected prop 'posts'");
		}
	});

	const writable_props = ['posts'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Companies> was created with unknown prop '${key}'`);
	});

	function input_input_handler() {
		searchQuery = this.value;
		$$invalidate(3, searchQuery);
	}

	const click_handler = item => clickDeleteCustomer(item.id);

	$$self.$$set = $$props => {
		if ('posts' in $$props) $$invalidate(0, posts = $$props.posts);
	};

	$$self.$capture_state = () => ({
		preload,
		onMount,
		Modal,
		Toast,
		axios,
		posts,
		toastBody,
		showModal,
		showConfirm,
		confirmText,
		confirmModal,
		searchQuery,
		handleSubmit,
		inputKeypressEvent,
		setCurrentCompany,
		controlConfirm,
		clickDeleteCustomer,
		deleteAction
	});

	$$self.$inject_state = $$props => {
		if ('posts' in $$props) $$invalidate(0, posts = $$props.posts);
		if ('toastBody' in $$props) $$invalidate(1, toastBody = $$props.toastBody);
		if ('showModal' in $$props) showModal = $$props.showModal;
		if ('showConfirm' in $$props) showConfirm = $$props.showConfirm;
		if ('confirmText' in $$props) $$invalidate(2, confirmText = $$props.confirmText);
		if ('confirmModal' in $$props) confirmModal = $$props.confirmModal;
		if ('searchQuery' in $$props) $$invalidate(3, searchQuery = $$props.searchQuery);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		posts,
		toastBody,
		confirmText,
		searchQuery,
		inputKeypressEvent,
		clickDeleteCustomer,
		deleteAction,
		input_input_handler,
		click_handler
	];
}

class Companies extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { posts: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Companies",
			options,
			id: create_fragment.name
		});
	}

	get posts() {
		throw new Error("<Companies>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set posts(value) {
		throw new Error("<Companies>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { Companies as default, preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
